def versionMajor = 1
def versionChild = 0
def versionPatch = 0

ext {
    versionCode = versionMajor * 10000 + versionChild * 100 + versionPatch * 1
    versionName = "${versionMajor}.${versionChild}.${versionPatch}"
    compileSdk = 33
    minSdk = 21
    targetSdk = 32
    TINKER_VERSION = '1.9.14.25.2'
    def lifecycle_Version = "2.6.1"
    core_ktx = "androidx.core:core-ktx:1.10.1"
    constraintlayout = "androidx.constraintlayout:constraintlayout:2.1.4"
    multidex = "androidx.multidex:multidex:2.0.1"
    androidXAnnotation = "androidx.annotation:annotation:1.6.0"
    recyclerview = "androidx.recyclerview:recyclerview:1.3.0"
    appcompat = "androidx.appcompat:appcompat:1.5.1"
    BaseDependencies = [core_ktx,
                        appcompat,
                        multidex,
                        androidXAnnotation]
    lifecycle_livedata = "androidx.lifecycle:lifecycle-livedata:$lifecycle_Version"
    lifecycle_livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_Version"
    lifecycle_runtime_ktx = "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_Version"
    lifecycle_viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_Version"
    lifecycle_viewmodel = "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_Version"
    lifecycle_service = "androidx.lifecycle:lifecycle-service:$lifecycle_Version"
    lifecycle_process = "androidx.lifecycle:lifecycle-process:$lifecycle_Version"
    LifecycleDependencies = [lifecycle_livedata,
                             lifecycle_livedata_ktx,
                             lifecycle_runtime_ktx,
                             lifecycle_viewmodel_ktx,
                             lifecycle_viewmodel,
                             lifecycle_service,
                             lifecycle_process]
    datastore_preferences = "androidx.datastore:datastore-preferences:1.0.0"
    autoService = "com.google.auto.service:auto-service:1.0.1"
    material = "com.google.android.material:material:1.9.0"
    def coroutinesVersion = "1.7.1"
    kotlinx_coroutines_core =
            "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    kotlinx_coroutines_android =
            "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    CoroutinesDependencies = [kotlinx_coroutines_core,
                              kotlinx_coroutines_android,]
    rxjava = "io.reactivex.rxjava3:rxjava:3.1.6"
    rxandroid = "io.reactivex.rxjava3:rxandroid:3.0.2"
    RxJavaDependencies = [rxjava,
                          rxandroid,]
    def room_version = "2.4.3"
    room_runtime = "androidx.room:room-runtime:$room_version"
    room_compiler = "androidx.room:room-compiler:$room_version"
    room_ktx = "androidx.room:room-ktx:$room_version"
    RoomDependencies = [room_runtime,
                        room_ktx,]
    def okhttpVersion = "4.11.0"
    okhttp = "com.squareup.okhttp3:okhttp:$okhttpVersion"
    logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    retrofit = "com.squareup.retrofit2:retrofit:2.9.0"
    fastjson = "com.alibaba:fastjson:1.2.83"
    RetrofitDependencies = [okhttp,
                            logging_interceptor,
                            retrofit]
    strictDatabinding = "com.kunminx.arch:strict-databinding:5.6.0"
    unPeekLivedata = "com.kunminx.arch:unpeek-livedata:7.8.0"
    MMKV = "com.tencent:mmkv:1.2.16" ///快速存储 不重要可以丢失的数据用这个
    def glideVersion = "4.15.1"
    glide = "com.github.bumptech.glide:glide:$glideVersion"
    glide_annotations = "com.github.bumptech.glide:annotations:$glideVersion"
    glide_compiler = "com.github.bumptech.glide:compiler:$glideVersion"

}

